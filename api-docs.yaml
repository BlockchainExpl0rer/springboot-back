openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/transactions/{transactionId}:
    get:
      tags:
      - address-transaction-controller
      operationId: getTransaction
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
    put:
      tags:
      - address-transaction-controller
      operationId: updateTransaction
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: stringId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      tags:
      - address-transaction-controller
      operationId: deleteTransaction
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/users:
    get:
      tags:
      - user-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - user-controller
      operationId: saveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
      - user-controller
      operationId: addRoleToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleToUserForm'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/transactions:
    get:
      tags:
      - address-transaction-controller
      operationId: getAddressTransactions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressTransaction'
    post:
      tags:
      - address-transaction-controller
      operationId: saveTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressTransaction'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddressTransaction'
  /api/v1/roles:
    post:
      tags:
      - user-controller
      operationId: saveRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
  /api/v1/users/{userId}:
    get:
      tags:
      - user-controller
      operationId: getUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    AddressTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        stringId:
          type: string
    RoleToUserForm:
      type: object
      properties:
        email:
          type: string
        roleName:
          type: string
